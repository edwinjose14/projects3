/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import java.awt.event.*;
import java.io.IOException;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import Modelo.*;
import java.awt.print.PrinterException;
import java.text.MessageFormat;


/**
 *
 * @author GERALDIN
 */
public class AgregarPaciente extends javax.swing.JFrame {

    DefaultComboBoxModel aModel = new DefaultComboBoxModel();
    medic m = new medic("", "");
    DefaultTableModel tblModel = new DefaultTableModel();

    /**
     * Creates new form AgregarPaciente
     */
    public AgregarPaciente() {
        initComponents();
        setLocationRelativeTo(null);
        
        cmbMedAsignado.setModel(aModel);
        tblModel.addColumn("Nombre");
        tblModel.addColumn("Apellido");
        tblModel.addColumn("Identificación");
        tblModel.addColumn("Edad");
        tblModel.addColumn("Sexo");
        tblModel.addColumn("Tipo de Sangre");
        tblModel.addColumn("N° Telefono");   
        tblModel.addColumn("Eps");
        tblModel.addColumn("Enfermedad");
        tblModel.addColumn("Medico");
        tblPaciente.setModel(tblModel);  
       
        RecorrerPaciente();  
        
        validarNumeros(txtId);
        validarNumeros(txtTelefono);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agregarmedico = new java.awt.Label();
        sueldo = new javax.swing.JLabel();
        nommedico = new javax.swing.JLabel();
        apemedico = new javax.swing.JLabel();
        idmedico = new javax.swing.JLabel();
        telmedico = new javax.swing.JLabel();
        tsmedico = new javax.swing.JLabel();
        sexmedico = new javax.swing.JLabel();
        edmedico = new javax.swing.JLabel();
        espmedico = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        txtEnfermedad = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtEps = new javax.swing.JTextField();
        cmbTsangre = new javax.swing.JComboBox<>();
        cmbSexo = new javax.swing.JComboBox<>();
        spEdad = new javax.swing.JSpinner();
        btnAgregar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPaciente = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cmbMedAsignado = new javax.swing.JComboBox();
        btnImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        agregarmedico.setAlignment(java.awt.Label.CENTER);
        agregarmedico.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        agregarmedico.setFont(new java.awt.Font("Baskerville Old Face", 3, 18)); // NOI18N
        agregarmedico.setName("lllll"); // NOI18N
        agregarmedico.setText("AGREGAR PACIENTE");
        getContentPane().add(agregarmedico);
        agregarmedico.setBounds(220, 0, 310, 50);

        sueldo.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        sueldo.setText("EPS:");
        getContentPane().add(sueldo);
        sueldo.setBounds(440, 190, 90, 40);

        nommedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        nommedico.setText("NOMBRES:");
        getContentPane().add(nommedico);
        nommedico.setBounds(60, 60, 80, 20);

        apemedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        apemedico.setText("APELLIDOS:");
        getContentPane().add(apemedico);
        apemedico.setBounds(60, 110, 100, 20);

        idmedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        idmedico.setText("IDENTIFICACION:");
        getContentPane().add(idmedico);
        idmedico.setBounds(60, 160, 130, 20);

        telmedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        telmedico.setText("TELEFONO:");
        getContentPane().add(telmedico);
        telmedico.setBounds(440, 150, 110, 20);

        tsmedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        tsmedico.setText("TIPO DE SANGRE:");
        getContentPane().add(tsmedico);
        tsmedico.setBounds(440, 60, 130, 20);

        sexmedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        sexmedico.setText("SEXO:");
        getContentPane().add(sexmedico);
        sexmedico.setBounds(70, 250, 42, 17);

        edmedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        edmedico.setText("EDAD:");
        getContentPane().add(edmedico);
        edmedico.setBounds(70, 210, 42, 17);

        espmedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        espmedico.setText("ENFERMEDAD: ");
        getContentPane().add(espmedico);
        espmedico.setBounds(440, 100, 110, 30);

        txtNombre.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        txtNombre.setMinimumSize(new java.awt.Dimension(8, 100));
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        getContentPane().add(txtNombre);
        txtNombre.setBounds(200, 60, 140, 30);

        txtApellido.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        getContentPane().add(txtApellido);
        txtApellido.setBounds(200, 100, 130, 30);

        txtId.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        getContentPane().add(txtId);
        txtId.setBounds(200, 150, 130, 30);

        txtEnfermedad.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        txtEnfermedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnfermedadActionPerformed(evt);
            }
        });
        getContentPane().add(txtEnfermedad);
        txtEnfermedad.setBounds(580, 110, 120, 30);

        txtTelefono.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        getContentPane().add(txtTelefono);
        txtTelefono.setBounds(580, 150, 120, 30);

        txtEps.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        getContentPane().add(txtEps);
        txtEps.setBounds(580, 190, 130, 30);

        cmbTsangre.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        cmbTsangre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipos....", "A-", "A+", "B-", "B+", "AB-", "AB+", "O+", "O-" }));
        cmbTsangre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTsangreActionPerformed(evt);
            }
        });
        getContentPane().add(cmbTsangre);
        cmbTsangre.setBounds(580, 60, 80, 30);

        cmbSexo.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        cmbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione.....", "F", "M" }));
        getContentPane().add(cmbSexo);
        cmbSexo.setBounds(190, 250, 140, 30);

        spEdad.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        spEdad.setModel(new javax.swing.SpinnerNumberModel(18, 18, 70, 1));
        getContentPane().add(spEdad);
        spEdad.setBounds(200, 200, 60, 30);

        btnAgregar.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        btnAgregar.setText("AGREGAR");
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarMouseClicked(evt);
            }
        });
        getContentPane().add(btnAgregar);
        btnAgregar.setBounds(560, 430, 100, 30);

        btnRegresar.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        btnRegresar.setText("REGRESAR");
        btnRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegresarMouseClicked(evt);
            }
        });
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegresar);
        btnRegresar.setBounds(40, 430, 110, 30);

        btnModificar.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        btnModificar.setText("MODIFICAR");
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarMouseClicked(evt);
            }
        });
        getContentPane().add(btnModificar);
        btnModificar.setBounds(300, 430, 110, 30);

        btnBorrar.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        btnBorrar.setText("BORRAR");
        btnBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBorrarMouseClicked(evt);
            }
        });
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBorrar);
        btnBorrar.setBounds(170, 430, 100, 30);

        btnLimpiar.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseClicked(evt);
            }
        });
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiar);
        btnLimpiar.setBounds(440, 430, 100, 30);

        tblPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Identificación", "Edad", "Sexo", "Tipo de Sangre", "Nº Telefono", "Eps", "Enfermedad", "Medico"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPacienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPaciente);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 290, 830, 110);

        jLabel1.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jLabel1.setText("MEDICO:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(450, 240, 80, 28);

        cmbMedAsignado.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        cmbMedAsignado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMedAsignadoActionPerformed(evt);
            }
        });
        getContentPane().add(cmbMedAsignado);
        cmbMedAsignado.setBounds(580, 240, 130, 30);

        btnImprimir.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        btnImprimir.setText("IMPRIMIR");
        btnImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImprimirMouseClicked(evt);
            }
        });
        getContentPane().add(btnImprimir);
        btnImprimir.setBounds(680, 430, 120, 30);

        setBounds(0, 0, 864, 532);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtEnfermedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnfermedadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnfermedadActionPerformed

    private void cmbTsangreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTsangreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTsangreActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed

    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegresarMouseClicked
        this.dispose();
    }//GEN-LAST:event_btnRegresarMouseClicked

    private void btnBorrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarMouseClicked
        try {
            Eliminar();
        } catch (Exception ex) {
                  JOptionPane.showMessageDialog(null, "No se pudo eliminar ", "Eliminar Paciente", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBorrarMouseClicked

    private void btnModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseClicked
        try {
            ModificarPaciente();
        } catch (IOException ex) {
           JOptionPane.showMessageDialog(null, "verifique la informacion", "Modificar Paciente", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "verifique la informacion", "Modificar Paciente", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnModificarMouseClicked

    private void btnAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseClicked
        try {
            IngresarPaciente();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "verifique la informacion", "Registrar Paciente", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "verifique la informacion", "Registrar Paciente", JOptionPane.ERROR_MESSAGE);
        }
        RecorrerPaciente();
    }//GEN-LAST:event_btnAgregarMouseClicked

    private void btnLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseClicked
        Limpiar();
    }//GEN-LAST:event_btnLimpiarMouseClicked

    private void cmbMedAsignadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMedAsignadoActionPerformed
        JComboBox cmb = (JComboBox) evt.getSource();
        m = (medic) cmb.getSelectedItem();

    }//GEN-LAST:event_cmbMedAsignadoActionPerformed

    private void tblPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPacienteMouseClicked
        int row = tblPaciente.rowAtPoint(evt.getPoint());
        InsertarDatos(row);
    }//GEN-LAST:event_tblPacienteMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    if (this.verificarmedico() == true) {
            JOptionPane.showMessageDialog(null, "No hay médicos registrados", "Registro de Paciente", JOptionPane.ERROR_MESSAGE);
            this.dispose();
            new AgregarMedico().setVisible(true);
        } else {
            this.LlenarCombo();
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnImprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirMouseClicked
        try {
            MessageFormat titulo = new MessageFormat("*** LISTA DE PACIENTES ***");
            MessageFormat pie = new MessageFormat("-- AGENDA DE CITAS --");
            tblPaciente.print(JTable.PrintMode.NORMAL, titulo, pie);
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(null, "No se pudo imprimir la tabla", "Imprimir", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnImprimirMouseClicked

    public void LlenarCombo() {
        for (Medico med : ListaMedico.lMedico) {
            medic m1 = new medic(med.getNombre(), med.getId());
            aModel.addElement(m1);
        }
    }

    public void Limpiar() {
        txtNombre.setText("");
        txtApellido.setText("");
        txtId.setText("");
        spEdad.setValue(18);
        cmbSexo.setSelectedItem("Seleccione...");
        cmbTsangre.setSelectedItem("Tipos...");
        txtTelefono.setText("");
        txtEps.setText("");
        txtEnfermedad.setText("");
        txtId.setEnabled(true);
    }

    public boolean verificarmedico() {
        int cont = 0;
        for (Medico med : ListaMedico.lMedico) {
            if (med != null) {
                cont++;
            }
        }
        if (cont == 0) {
            return true;
        } else {
            return false;
        }
    }

    public void IngresarPaciente() throws IOException, NumberFormatException {
        if (!txtNombre.getText().equals("") && !txtApellido.getText().equals("") && !txtId.getText().equals("")
                && !spEdad.getValue().toString().equals("0") && cmbSexo.getSelectedIndex() != 0 && cmbTsangre.getSelectedIndex() != 0
                && !txtTelefono.getText().equals("") && !txtEps.getText().equals("") && !txtEnfermedad.getText().equals("")) {
            Paciente p = new Paciente();
            p.setNombre(txtNombre.getText());
            p.setApellido(txtApellido.getText());
            p.setId(txtId.getText());
            p.setEdad(Integer.valueOf(spEdad.getValue().toString()));
            p.setSexo(cmbSexo.getSelectedItem().toString());
            p.setTsangre(cmbTsangre.getSelectedItem().toString());
            p.setNtelefono(txtTelefono.getText());
            p.setEps(txtEps.getText());
            p.setEnfermedad(txtEnfermedad.getText());
            p.setMedico(m.valueMember.toString());
            
            if (Menu.arP.RegistrarPaciente(p)) {
                JOptionPane.showMessageDialog(null, "Paciente Registrado Exitosamente", "Paciente Registrado", JOptionPane.INFORMATION_MESSAGE);
                Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "No Paciente Registrado Exitosamente", "Paciente Registrado", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Existen Campos Vacios", "Registro de Paciente", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void InsertarDatos(int co) {
        txtNombre.setText(tblPaciente.getValueAt(co, 0).toString());
        txtApellido.setText(tblPaciente.getValueAt(co, 1).toString());
        txtId.setText(tblPaciente.getValueAt(co, 2).toString());
        spEdad.setValue(tblPaciente.getValueAt(co, 3));
        cmbSexo.setSelectedItem(tblPaciente.getValueAt(co, 4));
        cmbTsangre.setSelectedItem(tblPaciente.getValueAt(co, 5).toString());
        txtTelefono.setText(tblPaciente.getValueAt(co, 6).toString());
        txtEps.setText(tblPaciente.getValueAt(co, 7).toString());
        txtEnfermedad.setText(tblPaciente.getValueAt(co, 8).toString());
        String c = tblPaciente.getValueAt(co, 9).toString();
        String nom = getMedicName(c);
        medic m = new medic(nom, c);
        cmbMedAsignado.setSelectedItem(m);
        txtId.setEnabled(false);
    }

    public String getMedicName(String id) {
        for (Medico m : ListaMedico.lMedico) {
            if (m.getId().equals(id)) {
                return m.getNombre();
            }
        }
        return "";
    }

    public void ModificarPaciente() throws IOException, NumberFormatException {
        if (!txtNombre.getText().equals("") && !txtApellido.getText().equals("") && !txtId.getText().equals("")
                && !spEdad.getValue().toString().equals("0") && cmbSexo.getSelectedIndex() != 0
                && cmbTsangre.getSelectedIndex() != 0 && !txtTelefono.getText().equals("") && txtEps.getText().equals("")
                && txtEnfermedad.getText().equals("") ) {

            Paciente p = new Paciente();

            p.setNombre(txtNombre.getText());
            p.setApellido(txtApellido.getText());
            String id = txtId.getText();
            p.setEdad(Integer.valueOf(spEdad.getValue().toString()));
            p.setSexo(cmbSexo.getSelectedItem().toString());
            p.setTsangre(cmbTsangre.getSelectedItem().toString());
            p.setNtelefono(txtTelefono.getText());
            p.setEps(txtEps.getText());
            p.setEnfermedad(txtEnfermedad.getText());
            p.setMedico(m.valueMember.toString());

            if (Menu.arP.ModificarPaciente(id, p)) {
                JOptionPane.showMessageDialog(null, "Paciente Modificado Exitosamente", "Modificar Paciente", JOptionPane.INFORMATION_MESSAGE);
                RecorrerPaciente();
                Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al modificar", "Modificar Paciente", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Existen Campos Vacios", "Registro de Paciente", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void Eliminar() throws Exception {
        int FilaSelec = tblPaciente.getSelectedRow();
        if (FilaSelec >= 0) {
            int id = Integer.parseInt(tblPaciente.getValueAt(FilaSelec, 2).toString());
            if (Menu.arP.EliminarPaciente(id)) {
                JOptionPane.showMessageDialog(null, "Paciente eliminado Exitosamente", "Eliminar Medico", JOptionPane.INFORMATION_MESSAGE);
                RecorrerPaciente();
                Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al Eliminar");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Para Poder Eliminar Seleccione una Fila", "Eliminar Paciente", JOptionPane.INFORMATION_MESSAGE);

        }
    }

    public void IniciarTabla() {
        int filas = tblModel.getRowCount();
        for (int i = 0; filas > i; i++) {
            tblModel.removeRow(0);
            i++;
        }
    }

    public void validarLetras(JTextField campo) {

        campo.addKeyListener(new KeyAdapter() {

            @Override
            public void keyTyped(KeyEvent e) {

                char c = e.getKeyChar();

                if (Character.isDigit(c)) {
                    getToolkit().beep();
                    e.consume();

                    JOptionPane.showMessageDialog(null, "Sólo se permiten números",
                            "Error", JOptionPane.ERROR_MESSAGE);

                }

            }

        });

    }

    
    public void validarNumeros(JTextField campo) {

        campo.addKeyListener(new KeyAdapter() {

            @Override
            public void keyTyped(KeyEvent e) {

                char c = e.getKeyChar();

                if (Character.isLetter(c)) {
                    getToolkit().beep();
                    e.consume();

                    JOptionPane.showMessageDialog(null, "Sólo se permiten números",
                            "Error", JOptionPane.ERROR_MESSAGE);

                }

            }

        });

    }
    public void RecorrerPaciente() {
        IniciarTabla();
        for (Paciente p : ListaPacientes.Listap) {
            Object[] m1 = new Object[11];
            m1[0] = p.getNombre();
            m1[1] = p.getApellido();
            m1[2] = p.getId();
            m1[3] = p.getEdad();
            m1[4] = p.getSexo();
            m1[5] = p.getTsangre();
            m1[6] = p.getNtelefono();
            m1[7] = p.getEps();
            m1[8] = p.getEnfermedad();
            m1[9] = p.getMedico();
            tblModel.addRow(m1);
        }
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label agregarmedico;
    private javax.swing.JLabel apemedico;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRegresar;
    public javax.swing.JComboBox cmbMedAsignado;
    private javax.swing.JComboBox<String> cmbSexo;
    private javax.swing.JComboBox<String> cmbTsangre;
    private javax.swing.JLabel edmedico;
    private javax.swing.JLabel espmedico;
    private javax.swing.JLabel idmedico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nommedico;
    private javax.swing.JLabel sexmedico;
    private javax.swing.JSpinner spEdad;
    private javax.swing.JLabel sueldo;
    private javax.swing.JTable tblPaciente;
    private javax.swing.JLabel telmedico;
    private javax.swing.JLabel tsmedico;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtEnfermedad;
    private javax.swing.JTextField txtEps;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
