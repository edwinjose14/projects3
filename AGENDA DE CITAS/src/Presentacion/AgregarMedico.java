/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import java.awt.event.*;
import java.io.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import Modelo.*;
import java.awt.print.PrinterException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author GERALDIN
 */
public class AgregarMedico extends javax.swing.JFrame {

    DefaultTableModel tModel = new DefaultTableModel();

    /**
     * Creates new form AgregarMedico
     */
    public AgregarMedico() {
        initComponents();
        setLocationRelativeTo(null);
        tModel.addColumn("Nombre");
        tModel.addColumn("Apellido");
        tModel.addColumn("Identificación");
        tModel.addColumn("Edad");
        tModel.addColumn("Sexo");
        tModel.addColumn("Tipo de Sangre");
        tModel.addColumn("N° Telefono");
        tModel.addColumn("Especialización");
        tabla.setModel(tModel);
        Recorrer();
        validarNumeros(txtId);
        validarNumeros(txtTelefono);
        validarLetras(txtApellido);
        validarLetras(txtNombre);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agregarmedico = new java.awt.Label();
        nommedico = new javax.swing.JLabel();
        apemedico = new javax.swing.JLabel();
        idmedico = new javax.swing.JLabel();
        telmedico = new javax.swing.JLabel();
        tsmedico = new javax.swing.JLabel();
        sexmedico = new javax.swing.JLabel();
        edmedico = new javax.swing.JLabel();
        espmedico = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        cmbTsangre = new javax.swing.JComboBox<>();
        cmbSexo = new javax.swing.JComboBox<>();
        spEdad = new javax.swing.JSpinner();
        btnImprimir = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        cmbEspecializacion = new javax.swing.JComboBox<>();
        cmbFiltrar = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("\n");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        agregarmedico.setAlignment(java.awt.Label.CENTER);
        agregarmedico.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        agregarmedico.setFont(new java.awt.Font("Baskerville Old Face", 3, 18)); // NOI18N
        agregarmedico.setName("lllll"); // NOI18N
        agregarmedico.setText("AGREGAR MEDICO");
        getContentPane().add(agregarmedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 310, 50));

        nommedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        nommedico.setText("NOMBRES:");
        getContentPane().add(nommedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 100, 20));

        apemedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        apemedico.setText("APELLIDOS:");
        getContentPane().add(apemedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 120, 20));

        idmedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        idmedico.setText("IDENTIFICACION:");
        getContentPane().add(idmedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 130, 20));

        telmedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        telmedico.setText("TELEFONO:");
        getContentPane().add(telmedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 200, 110, 20));

        tsmedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        tsmedico.setText("TIPO DE SANGRE:");
        getContentPane().add(tsmedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 150, 20));

        sexmedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        sexmedico.setText("SEXO:");
        getContentPane().add(sexmedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 60, 70, 20));

        edmedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        edmedico.setText("EDAD:");
        getContentPane().add(edmedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 70, -1));

        espmedico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        espmedico.setText("ESPECIALIZACION:");
        getContentPane().add(espmedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 140, 140, 30));

        txtNombre.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        txtNombre.setMinimumSize(new java.awt.Dimension(8, 100));
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 140, 30));

        txtApellido.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        getContentPane().add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, 130, 30));

        txtId.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        getContentPane().add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 130, 30));

        txtTelefono.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        getContentPane().add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, 120, 30));

        cmbTsangre.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        cmbTsangre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipos....", "A-", "A+", "B-", "B+", "AB-", "AB+", "O+", "O-" }));
        cmbTsangre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTsangreActionPerformed(evt);
            }
        });
        getContentPane().add(cmbTsangre, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 100, 80, 30));

        cmbSexo.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        cmbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "F", "M" }));
        getContentPane().add(cmbSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 50, 120, 30));

        spEdad.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        spEdad.setModel(new javax.swing.SpinnerNumberModel(18, 18, 70, 1));
        getContentPane().add(spEdad, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 60, 30));

        btnImprimir.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        btnImprimir.setText("IMPRIMIR");
        btnImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImprimirMouseClicked(evt);
            }
        });
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        getContentPane().add(btnImprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 400, 100, 30));

        btnRegresar.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        btnRegresar.setText("REGRESAR");
        btnRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegresarMouseClicked(evt);
            }
        });
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 110, 30));

        btnModificar.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        btnModificar.setText("MODIFICAR");
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarMouseClicked(evt);
            }
        });
        getContentPane().add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 400, 120, 30));

        btnBorrar.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        btnBorrar.setText("BORRAR");
        btnBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBorrarMouseClicked(evt);
            }
        });
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 400, 90, 30));

        btnLimpiar.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseClicked(evt);
            }
        });
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 400, 100, 30));

        tabla.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Identificación", "Edad", "Sexo", "Tipo de Sangre", "N° Telefono", "Especialización"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 830, 110));

        cmbEspecializacion.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        cmbEspecializacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipos...", "Medico General", "Pediatra", "Ginecologo", "Urologo", "Cardiologia", "Infectologia", "Oftalmologia" }));
        getContentPane().add(cmbEspecializacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 140, 100, 40));

        cmbFiltrar.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        cmbFiltrar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Medico General", "Pediatra", "Ginecologo", "Urologo", "Cardiologia", "Infectologia", "Oftalmologia" }));
        cmbFiltrar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFiltrarItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbFiltrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 230, 110, 30));

        jLabel1.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jLabel1.setText("FILTRAR POR: ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, 120, 30));

        btnAgregar.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        btnAgregar.setText("AGREGAR");
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarMouseClicked(evt);
            }
        });
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 400, 100, 30));

        setBounds(0, 0, 856, 511);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbTsangreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTsangreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTsangreActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed

    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed

    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed

    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegresarMouseClicked
        this.dispose();
    }//GEN-LAST:event_btnRegresarMouseClicked

    private void btnBorrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarMouseClicked
        try {
            Eliminar();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "no se logro borrar con exito..", " borrar medico", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBorrarMouseClicked

    private void btnModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseClicked
        try {
            ModificarMedico();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Ha ingresado algo mal", "modificar",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnModificarMouseClicked

    private void btnImprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirMouseClicked
        try {
            MessageFormat titulo = new MessageFormat("*** LISTA DE MEDICOS ***");
            MessageFormat pie = new MessageFormat("-- AGENDA DE CITAS --");
            tabla.print(JTable.PrintMode.NORMAL, titulo, pie);
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(null, "No se pudo imprimir la tabla", "Imprimir", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnImprimirMouseClicked

    private void btnLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseClicked
        LimpiarCasillas();
    }//GEN-LAST:event_btnLimpiarMouseClicked


    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        int row = tabla.rowAtPoint(evt.getPoint());
        ponerDatos(row);
     }//GEN-LAST:event_tablaMouseClicked

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void cmbFiltrarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFiltrarItemStateChanged

        String filtrar = cmbFiltrar.getSelectedItem().toString();

        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(tModel);
        tabla.setRowSorter(tr);

        if (filtrar != "Todos") {
            tr.setRowFilter(RowFilter.regexFilter(filtrar));
        } else {
            tabla.setRowSorter(tr);
        }
    }//GEN-LAST:event_cmbFiltrarItemStateChanged

    private void btnAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseClicked
        try {
            IngresarMedico();
        } catch (IOException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Ha ingresado mal un campo",
                    "Registrar Médico", JOptionPane.ERROR_MESSAGE);
        }
        Recorrer();
    }//GEN-LAST:event_btnAgregarMouseClicked

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarActionPerformed
    public void IngresarMedico() throws IOException, NumberFormatException {
        int e = (int) spEdad.getValue();
        if (!txtNombre.getText().equals("") && !txtApellido.getText().equals("") && !spEdad.getValue().toString().equals("0")
                && !txtId.getText().equals("") && cmbSexo.getSelectedIndex() != 0 && !txtTelefono.getText().equals("")
                && cmbEspecializacion.getSelectedIndex() != 0 && cmbTsangre.getSelectedIndex() != 0) {

            Medico medico = new Medico();
            medico.setNombre(txtNombre.getText());
            medico.setApellido(txtApellido.getText());
            medico.setId(txtId.getText());
            medico.setEdad(Integer.valueOf(spEdad.getValue().toString()));
            medico.setSexo(cmbSexo.getSelectedItem().toString());
            medico.setTsangre(cmbTsangre.getSelectedItem().toString());
            medico.setNtelefono(txtTelefono.getText());
            medico.setEspecializacion(cmbEspecializacion.getSelectedItem().toString());

            if (Menu.arM.RegistrarMedico(medico)) {
                JOptionPane.showMessageDialog(null, "Medico Registrado Exitosamente", "Medico Registrado", JOptionPane.INFORMATION_MESSAGE);
                LimpiarCasillas();
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo registrar", "Info", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ha Ingresado Mal un Campo", "Registrar Medico", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void LimpiarCasillas() {

        txtNombre.setText("");
        txtApellido.setText("");
        spEdad.setValue(0);
        txtId.setText("");
        cmbSexo.setSelectedItem("Seleccione...");
        cmbTsangre.setSelectedItem("Tipos...");
        txtTelefono.setText("");
        cmbEspecializacion.setSelectedItem("Tipos...");

        txtId.setEnabled(true);
    }

    public void ponerDatos(int co) {
        txtNombre.setText(tabla.getValueAt(co, 0).toString());
        txtApellido.setText(tabla.getValueAt(co, 1).toString());
        txtId.setText(tabla.getValueAt(co, 2).toString());
        spEdad.setValue(tabla.getValueAt(co, 3));
        cmbSexo.setSelectedItem(tabla.getValueAt(co, 4).toString());
        cmbTsangre.setSelectedItem(tabla.getValueAt(co, 5).toString());
        txtTelefono.setText(tabla.getValueAt(co, 6).toString());
        cmbEspecializacion.setSelectedItem(tabla.getValueAt(co, 7).toString());

        txtId.setEnabled(false);
    }

    public void ModificarMedico() throws IOException {
        int e = (int) spEdad.getValue();
        if (!txtNombre.getText().equals("") && !txtApellido.getText().equals("") && !spEdad.getValue().toString().equals("0")
                && !txtId.getText().equals("") && cmbSexo.getSelectedIndex() != 0 && !txtTelefono.getText().equals("")
                && cmbEspecializacion.getSelectedIndex() != 0 && cmbTsangre.getSelectedIndex() != 0) {

            Medico medico = new Medico();
            medico.setNombre(txtNombre.getText());
            medico.setApellido(txtApellido.getText());
            String id = txtId.getText();
            medico.setEdad(Integer.valueOf(spEdad.getValue().toString()));
            medico.setSexo(cmbSexo.getSelectedItem().toString());
            medico.setTsangre(cmbTsangre.getSelectedItem().toString());
            medico.setNtelefono(txtTelefono.getText());
            medico.setEspecializacion(cmbEspecializacion.getSelectedItem().toString());

            if (Menu.arM.ModificarMedico(id, medico)) {
                JOptionPane.showMessageDialog(null, "Medico modificado Exitosamente", "Medico Registrado", JOptionPane.INFORMATION_MESSAGE);
                Recorrer();
                LimpiarCasillas();
            } else {
                JOptionPane.showMessageDialog(null, "Error al Modificar", "Modificar Medico", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ha Ingresado Mal un Campo", "Registrar Medico", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void Eliminar() throws IOException {
        int FilaSelec = tabla.getSelectedRow();
        if (FilaSelec >= 0) {
            int id = Integer.parseInt(tabla.getValueAt(FilaSelec, 2).toString());
            if (Menu.arM.EliminarMedico(id)) {
                JOptionPane.showMessageDialog(null, "Medico eliminado Exitosamente", "Eliminar Medico", JOptionPane.INFORMATION_MESSAGE);
                Recorrer();
                LimpiarCasillas();
            } else {
                JOptionPane.showMessageDialog(null, "Error al Eliminar", "Eliminar Medico", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Para Poder Eliminar Seleccione una Fila", "Eliminar Medico", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void InicioTabla() {
        int filasM = tModel.getRowCount();
        for (int i = 0; filasM > i; i++) {
            tModel.removeRow(0);
            i++;
        }
    }

    public void Recorrer() {
        InicioTabla();
        for (Medico med : ListaMedico.lMedico) {
            Object[] m2 = new Object[8];
            m2[0] = med.getNombre();
            m2[1] = med.getApellido();
            m2[2] = med.getId();
            m2[3] = med.getEdad();
            m2[4] = med.getSexo();
            m2[5] = med.getTsangre();
            m2[6] = med.getNtelefono();
            m2[7] = med.getEspecializacion();

            tModel.addRow(m2);
        }
    }

    public void validarLetras(JTextField ke) {
        ke.addKeyListener(new KeyAdapter() {

            public void keyTyped(KeyEvent e) {

                char c = e.getKeyChar();

                if (Character.isDigit(c)) {
                    getToolkit().beep();
                    e.consume();

                    JOptionPane.showMessageDialog(null, "Sólo se permiten letras",
                            "Error", JOptionPane.ERROR_MESSAGE);

                }

            }

        });

    }

    public void validarNumeros(JTextField ke) {
        ke.addKeyListener(new KeyAdapter() {

            public void keyTyped(KeyEvent e) {

                char c = e.getKeyChar();

                if (Character.isLetter(c)) {

                    getToolkit().beep();
                    e.consume();

                    JOptionPane.showMessageDialog(null, "Sólo se permiten números",
                            "Error", JOptionPane.ERROR_MESSAGE);

                }

            }

        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label agregarmedico;
    private javax.swing.JLabel apemedico;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> cmbEspecializacion;
    private javax.swing.JComboBox<String> cmbFiltrar;
    private javax.swing.JComboBox<String> cmbSexo;
    private javax.swing.JComboBox<String> cmbTsangre;
    private javax.swing.JLabel edmedico;
    private javax.swing.JLabel espmedico;
    private javax.swing.JLabel idmedico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nommedico;
    private javax.swing.JLabel sexmedico;
    private javax.swing.JSpinner spEdad;
    private javax.swing.JTable tabla;
    private javax.swing.JLabel telmedico;
    private javax.swing.JLabel tsmedico;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
